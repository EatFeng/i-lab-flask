"""empty message

Revision ID: dfc2729cf78f
Revises: 9652aa152b2f
Create Date: 2024-09-24 17:59:38.965284

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'dfc2729cf78f'
down_revision = '9652aa152b2f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('guidance', schema=None) as batch_op:
        batch_op.alter_column('lab_id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)

    with op.batch_alter_table('labs', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('location',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_index('name')
        batch_op.create_unique_constraint(None, ['lab_name'])
        batch_op.drop_column('name')
        batch_op.drop_column('department')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('labs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('department', mysql.VARCHAR(length=120), nullable=True))
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(length=80), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('name', ['name'], unique=True)
        batch_op.alter_column('location',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=120),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('guidance', schema=None) as batch_op:
        batch_op.alter_column('lab_id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
